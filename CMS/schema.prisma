generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model EditsInverntory {
  med_id      Int
  medName     String    @db.VarChar(225)
  date        DateTime  @db.DateTime(0)
  cause       String    @db.VarChar(225)
  addSubCount Int
  edit_id     Int       @id @default(autoincrement())
  inventory   inventory @relation(fields: [med_id, medName], references: [med_id, medName], onDelete: NoAction, onUpdate: NoAction, map: "FK_inventory_TO_EditsInverntory")

  @@index([med_id, medName], map: "FK_inventory_TO_EditsInverntory")
}

model HSU_bulletin {
  admin_id Int
  username String @db.VarChar(225)
  caption  String @db.VarChar(500)
  file     Bytes? @db.Blob
  post_id  Int    @id @unique(map: "post_id") @default(autoincrement())
  admin    admin  @relation(fields: [admin_id, username], references: [admin_id, username], onDelete: NoAction, onUpdate: NoAction, map: "FK_admin_TO_HSU_bulletin")

  @@index([admin_id, username], map: "FK_admin_TO_HSU_bulletin")
}

model admin {
  admin_id             Int                    @unique(map: "admin_id") @default(autoincrement())
  username             String                 @db.VarChar(225)
  password             String                 @db.VarChar(225)
  gmail                String                 @db.VarChar(225)
  HSU_bulletin         HSU_bulletin[]
  consultation_records consultation_records[]
  medAdministration    medAdministration[]

  @@id([admin_id, username])
}

model appointmant {
  appointment_id Int      @id @unique(map: "appointment_id")
  client_id      Int
  date           DateTime @db.Date
  hour           Int
  minute         Int
  client         client   @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_client_TO_appointmant")

  @@index([client_id], map: "FK_client_TO_appointmant")
}

model client {
  client_id            Int                    @unique(map: "client_id") @default(autoincrement())
  username             String                 @db.VarChar(225)
  password             String                 @db.VarChar(225)
  name                 String                 @db.VarChar(225)
  gmail                String                 @db.VarChar(225)
  age                  Int
  gender               String                 @db.VarChar(225)
  category             String                 @db.VarChar(225)
  grade                Int?
  appointmant          appointmant[]
  consultation_records consultation_records[]
  dental_certificates  dental_certificates[]
  medAdministration    medAdministration[]
  medical_certificates medical_certificates[]
  opthal_certificates  opthal_certificates[]
  physical_exam        physical_exam[]

  @@id([client_id, username])
}

model consultation_records {
  client_id         Int
  admin_id          Int
  consultation_id   Int      @id @unique(map: "consultation_id") @default(autoincrement())
  date              DateTime @db.DateTime(0)
  patient           String   @db.VarChar(225)
  doctor            String   @db.VarChar(225)
  complaint         String   @db.VarChar(225)
  remarks           String   @db.VarChar(500)
  confined          Boolean
  medAdministration Boolean
  admin             admin    @relation(fields: [admin_id], references: [admin_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_admin_TO_consultation_records")
  client            client   @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_client_TO_consultation_records")

  @@index([admin_id], map: "FK_admin_TO_consultation_records")
  @@index([client_id], map: "FK_client_TO_consultation_records")
}

model dental_certificates {
  client_id Int
  date      DateTime @db.Date
  dental    Bytes    @db.Blob
  dental_id Int      @id @default(autoincrement())
  client    client   @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_client_TO_dental_certificates")

  @@index([client_id], map: "FK_client_TO_dental_certificates")
}

model inventory {
  med_id            Int                 @default(autoincrement())
  medName           String              @db.VarChar(225)
  expiration        DateTime            @db.Date
  count             Int
  EditsInverntory   EditsInverntory[]
  medAdministration medAdministration[]

  @@id([med_id, medName])
}

model medAdministration {
  client_id       Int
  admin_id        Int
  med_id          Int
  consultation_id Int       @id @default(autoincrement())
  date            DateTime  @db.DateTime(0)
  patient         String    @db.VarChar(225)
  compalint       String    @db.VarChar(500)
  medName         String    @db.VarChar(225)
  count           Int
  admin           admin     @relation(fields: [admin_id], references: [admin_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_admin_TO_medAdministration")
  client          client    @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_client_TO_medAdministration")
  inventory       inventory @relation(fields: [med_id, medName], references: [med_id, medName], onDelete: NoAction, onUpdate: NoAction, map: "FK_inventory_TO_medAdministration")

  @@index([admin_id], map: "FK_admin_TO_medAdministration")
  @@index([client_id], map: "FK_client_TO_medAdministration")
  @@index([med_id, medName], map: "FK_inventory_TO_medAdministration")
}

model medical_certificates {
  client_id  Int
  date       DateTime @db.Date
  medical    Bytes    @db.Blob
  medical_id Int      @id @default(autoincrement())
  client     client   @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_client_TO_medical_certificates")

  @@index([client_id], map: "FK_client_TO_medical_certificates")
}

model opthal_certificates {
  client_id Int
  date      DateTime @db.Date
  opthal    Bytes    @db.Blob
  opthal_id Int      @id @default(autoincrement())
  client    client   @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_client_TO_opthal_certificates")

  @@index([client_id], map: "FK_client_TO_opthal_certificates")
}

model physical_exam {
  client_id   Int
  date        DateTime @db.Date
  physical    Bytes    @db.Blob
  physical_id Int      @id @default(autoincrement())
  client      client   @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_client_TO_physical_exam")

  @@index([client_id], map: "FK_client_TO_physical_exam")
}
